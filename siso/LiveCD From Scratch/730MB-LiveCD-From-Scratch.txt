	# PACKAGES REQUIRED FOR THE HOST SYSTEM
sudo apt-get install \
    debootstrap \
    squashfs-tools \
    xorriso \
    isolinux \
    syslinux-efi \
    grub-pc-bin \
    grub-efi-amd64-bin \
    grub-efi-ia32-bin \
    mtools \
    dosfstools


	# LIVE CD FROM SCRATCH HOME FOLDER
mkdir -p "${HOME}/LIVE_BOOT"


	# OBTAIN THE SYSTEM INTO THE RUNNING SYSTEM - DEBOOTSTRAP CREATES A SKELETON CHROOT STRUCTURE
     	# CHOOSE A DISTRIBUTION (Debian - stable, unstable, testing) || (Ubuntu Releases - https://wiki.ubuntu.com/Releases)
     	# SET REQUIRED ARCHITECTURE (amd || intel)
     	# SET APPROPRIATE DEBIAN MIRROR CLOSE TO YOUR LOCATION - https://www.debian.org/mirror/list
sudo debootstrap \
    --arch=amd64 \
    --variant=minbase \
    stable \
    "${HOME}/LIVE_BOOT/chroot" \
    http://ftp.cz.debian.org/debian/


	# INSTALL SYSTEM PACKAGES (kernel, init) INTO LIVE CD HOME FOLDER
sudo chroot "${HOME}/LIVE_BOOT/chroot" << EOF
apt-get update && \
apt-get install -y --no-install-recommends \
    linux-image-amd64 \
    live-boot \
    systemd-sysv
EOF


	# INSTALL REQURED PACKAGES FOR LIVE CD SYSTEM
sudo chroot "${HOME}/LIVE_BOOT/chroot" << EOF
apt-get install -y --no-install-recommends \
    curl \
    openssh-client \
    network-manager \
    net-tools \
    xserver-xorg-core \
    xserver-xorg-input-libinput \
    xserver-xorg-video-fbdev \
    libasound2 \
    libdbus-glib-1-2 \
    libgtk2.0-0 \
    ca-certificates \
    console-setup \
    locales \
    cryptsetup \
    xpdf \
    xinit \
    nano \
    xz-utils
EOF


	# EXECUTE CHANGES TO THE SYSTEM
	# HOSTNAME, PASSWORDS, KEYBOARD SETTINGS / LOCALES, AUTOLOGIN, PALEMOON, PDF DOCUMENTS, ...
echo "debian-live" | sudo tee "${HOME}/LIVE_BOOT/chroot/etc/hostname"

sudo chroot "${HOME}/LIVE_BOOT/chroot" passwd root

cat <<'EOF' > "${HOME}/LIVE_BOOT/chroot/etc/default/locale
#  File generated by update-locale

LANG="en_US.UTF-8"
LC_NUMERIC="cs_CZ.UTF-8"
LC_TIME="cs_CZ.UTF-8"
LC_MONETARY="cs_CZ.UTF-8"
LC_PAPER="cs_CZ.UTF-8"
LC_NAME="cs_CZ.UTF-8"
LC_ADDRESS="cs_CZ.UTF-8"
LC_TELEPHONE="cs_CZ.UTF-8"
LC_MEASUREMENT="cs_CZ.UTF-8"
LC_IDENTIFICATION="cs_CZ.UTF-8"
EOF


cat <<'EOF' > "${HOME}/LIVE_BOOT/chroot/etc/default/keyboard
# KEYBOARD CONFIGURATION FILE

# Consult the keyboard(5) manual page.

XKBMODEL="pc105"
XKBLAYOUT="cz"
XKBVARIANT=""
XKBOPTIONS=""

BACKSPACE="guess"
EOF


sudo chroot "${HOME}/LIVE_BOOT/chroot" nano /etc/systemd/logind.conf
### UNCOMENT PARAMETER AND SET DIFFERENT VALUE
 	NAutoVTs=1

mkdir -p /etc/systemd/system/getty@tty1.service.d/
cat <<'EOF' > "${HOME}/LIVE_BOOT/chroot/etc/systemd/system/getty@tty1.service.d/autologin.conf"
[Service]
ExecStart=
ExecStart=-/sbin/agetty -o '-p -f -- \\u' --noclear --autologin root %I $TERM
EOF


cp /home/ubnt/Documents/palemoon-33.0.0.linux-x86_64-gtk2.tar.xz ${HOME}/LIVE_BOOT/chroot
sudo chroot "${HOME}/LIVE_BOOT/chroot" tar xvf /palemoon-33.0.0.linux-x86_64-gtk2.tar.xz -C /
sudo chroot "${HOME}/LIVE_BOOT/chroot" ln -s /palemoon/palemoon /usr/bin/palemoon
sudo chroot "${HOME}/LIVE_BOOT/chroot" rm -rf /palemoon-33.0.0.linux-x86_64-gtk2.tar.xz

sudo chroot "${HOME}/LIVE_BOOT/chroot" mkdir -p /root/PDF
sudo cp /home/ubnt/Downloads/OS_* /root/LIVE_BOOT/chroot/root/PDF/


	# DIRECTORIES ESSENTIAL FOR LIVE ENVIRONMENT FILES AND SCRATCH FILES
mkdir -p "${HOME}/LIVE_BOOT"/{staging/{EFI/BOOT,boot/grub/x86_64-efi,isolinux,live},tmp}


	# COMPRESSION OF THE ALTERED CHROOT ENVIRONMENT
sudo mksquashfs \
    "${HOME}/LIVE_BOOT/chroot" \
    "${HOME}/LIVE_BOOT/staging/live/filesystem.squashfs" \
    -e boot


	# COPPY OF THE KERNEL AND INITRAMFS
cp "${HOME}/LIVE_BOOT/chroot/boot"/vmlinuz-* \
    "${HOME}/LIVE_BOOT/staging/live/vmlinuz" && \
cp "${HOME}/LIVE_BOOT/chroot/boot"/initrd.img-* \
    "${HOME}/LIVE_BOOT/staging/live/initrd"


	# BOOTLOADERS
	# isolinux
cat <<'EOF' > "${HOME}/LIVE_BOOT/staging/isolinux/isolinux.cfg"
UI vesamenu.c32

#MENU TITLE 
MENU BACKGROUND splash.png

DEFAULT linux
#TIMEOUT 60
#MENU RESOLUTION 640 480
MENU COLOR border        30;44   #40ffffff #a0000000 std
MENU COLOR title         1;36;44 #9033ccff #a0000000 std
MENU COLOR sel           7;37;40 #e0ffffff #20ffffff all
MENU COLOR unsel         37;44   #50ffffff #a0000000 std
MENU COLOR help          37;40   #c0ffffff #a0000000 std
#MENU COLOR timeout_msg  37;40   #80ffffff #00000000 std
#MENU COLOR timeout      1;37;40 #c0ffffff #00000000 std
#MENU COLOR msg07        37;40   #90ffffff #a0000000 std
#MENU COLOR tabmsg       31;40   #30ffffff #00000000 std

MENU VSHIFT 12
MENU HSHIFT 25
MENU WIDTH 45

LABEL linux
  MENU LABEL Debian Live
  MENU DEFAULT
  KERNEL /live/vmlinuz
  APPEND initrd=/live/initrd boot=live
EOF

	### isolinux SPLASH IMG
cp /home/ubnt/Documents/vzor-640-480-bubble.png /root/LIVE_BOOT/staging/isolinux/splash.png


	# GRUB BOOT MENU (efi/uefi mode)
cat <<'EOF' > "${HOME}/LIVE_BOOT/staging/boot/grub/grub.cfg"
insmod part_gpt
insmod part_msdos
insmod fat
insmod iso9660

insmod all_video
insmod font

set default="0"
set timeout=30

# If X has issues finding screens, experiment with/without nomodeset.

menuentry "Debian Live [EFI/GRUB]" {
    search --no-floppy --set=root --label DEBLIVE
    linux ($root)/live/vmlinuz boot=live
    initrd ($root)/live/initrd
}
EOF

	# COPY CONFIG INTO EFI BOOT DIRECTORY
cp "${HOME}/LIVE_BOOT/staging/boot/grub/grub.cfg" "${HOME}/LIVE_BOOT/staging/EFI/BOOT/"

	# CONFIG WHICH FINDS ROOT AND LOADS THE GRUB CONFIG
cat <<'EOF' > "${HOME}/LIVE_BOOT/tmp/grub-embed.cfg"
if ! [ -d "$cmdpath" ]; then
    # On some firmware, GRUB has a wrong cmdpath when booted from an optical disc.
    # https://gitlab.archlinux.org/archlinux/archiso/-/issues/183
    if regexp --set=1:isodevice '^(\([^)]+\))\/?[Ee][Ff][Ii]\/[Bb][Oo][Oo][Tt]\/?$' "$cmdpath"; then
        cmdpath="${isodevice}/EFI/BOOT"
    fi
fi
configfile "${cmdpath}/grub.cfg"
EOF


	# PREPARE BOOT LOADER FILES	(bios/legacy)
cp /usr/lib/ISOLINUX/isolinux.bin "${HOME}/LIVE_BOOT/staging/isolinux/" && \
cp /usr/lib/syslinux/modules/bios/* "${HOME}/LIVE_BOOT/staging/isolinux/"

	# (efi/modern)
cp -r /usr/lib/grub/x86_64-efi/* "${HOME}/LIVE_BOOT/staging/boot/grub/x86_64-efi/"

	# EFI bootable from grub 1
grub-mkstandalone -O i386-efi \
    --modules="part_gpt part_msdos fat iso9660" \
    --locales="" \
    --themes="" \
    --fonts="" \
    --output="${HOME}/LIVE_BOOT/staging/EFI/BOOT/BOOTIA32.EFI" \
    "boot/grub/grub.cfg=${HOME}/LIVE_BOOT/tmp/grub-embed.cfg"

	# EFI bootable from grub 2
grub-mkstandalone -O x86_64-efi \
    --modules="part_gpt part_msdos fat iso9660" \
    --locales="" \
    --themes="" \
    --fonts="" \
    --output="${HOME}/LIVE_BOOT/staging/EFI/BOOT/BOOTx64.EFI" \
    "boot/grub/grub.cfg=${HOME}/LIVE_BOOT/tmp/grub-embed.cfg"

	# FAT16 UEFI containing EFI
(cd "${HOME}/LIVE_BOOT/staging" && \
    dd if=/dev/zero of=efiboot.img bs=1M count=20 && \
    mkfs.vfat efiboot.img && \
    mmd -i efiboot.img ::/EFI ::/EFI/BOOT && \
    mcopy -vi efiboot.img \
        "${HOME}/LIVE_BOOT/staging/EFI/BOOT/BOOTIA32.EFI" \
        "${HOME}/LIVE_BOOT/staging/EFI/BOOT/BOOTx64.EFI" \
        "${HOME}/LIVE_BOOT/staging/boot/grub/grub.cfg" \
        ::/EFI/BOOT/
)


	# CREATE A BOOTABLE ISO
xorriso \
    -as mkisofs \
    -iso-level 3 \
    -o "${HOME}/LIVE_BOOT/debian-custom.iso" \
    -full-iso9660-filenames \
    -volid "DEBLIVE" \
    --mbr-force-bootable -partition_offset 16 \
    -joliet -joliet-long -rational-rock \
    -isohybrid-mbr /usr/lib/ISOLINUX/isohdpfx.bin \
    -eltorito-boot \
        isolinux/isolinux.bin \
        -no-emul-boot \
        -boot-load-size 4 \
        -boot-info-table \
        --eltorito-catalog isolinux/isolinux.cat \
    -eltorito-alt-boot \
        -e --interval:appended_partition_2:all:: \
        -no-emul-boot \
        -isohybrid-gpt-basdat \
    -append_partition 2 C12A7328-F81F-11D2-BA4B-00A0C93EC93B ${HOME}/LIVE_BOOT/staging/efiboot.img \
    "${HOME}/LIVE_BOOT/staging"


# TO DO
	#GRUB UNDERSTANDING
	#PERSISTENCE
